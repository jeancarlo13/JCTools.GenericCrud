@using JCTools.GenericCrud.Services

@model JCTools.GenericCrud.Models.IIndexModel

@inject ICrudLocalizer Localizer
@inject JCTools.GenericCrud.Services.IViewRenderService RenderingServices

@{
    Layout = Model.LayoutPage;
    ViewData["Title"] = Model.Title;
}

<h2>@Model.Title</h2>
<h3>@Model.Subtitle</h2>
    @if (Model.Message != null && !string.IsNullOrWhiteSpace(Model.Message.Text))
    {
        <div class="alert @(Model.Message.CssClass) alert-dismissible">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">Ã—</button>
            @Model.Message.Text
        </div>
    }
    <table class="table table-striped table-condensed table-hover">
        <thead>
            <tr>
                @foreach (var title in Model.Columns)
                {
                    <th>@title</th>
                }
                @if (Model.ShowActionsColumns)
                {
                    <th class="text-center">
                        <partial name="_action" model="Model.NewAction"/>
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            @{
                var entities = Model.GetCollectionData();
                var modelId = Model.GetId();
                foreach (var item in entities)
                {
                    var key = item.GetKeyValue();
                    var isSelected = key?.Equals(modelId);
                    var classAttribute = isSelected.HasValue && isSelected.Value ? "class=\"active\"" : string.Empty;

                    <tr @Html.Raw(classAttribute)>
                        @foreach (var property in item.VisibleProperties)
                        {
                            if (property.UseCustomView)
                            {
                                <td>@await RenderingServices.RenderViewFor(Model, Html, ViewData, property.Name, item.GetEntity())</td>
                            }
                            else
                            {
                                <td>@item.GetPropertyValue(property)</td>
                            }
                        }
                        @if (Model.ShowActionsColumns)
                        {
                            Model.SetId(key);
                            <td class="text-center">
                                <partial name="_action" model="Model.DetailsAction" />
                                <partial name="_action" model="Model.EditAction" />
                                <partial name="_action" model="Model.DeleteAction" />
                            </td>
                        }
                    </tr>
                }
            }
        </tbody>
    </table>

    <script src="@Model.JsScriptUrl"></script>